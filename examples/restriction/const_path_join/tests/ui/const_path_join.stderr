warning: path could be constructed from a string literal
  --> const_path_join.rs:8:5
   |
8  |     let _ = PathBuf::from("foo").join("bar");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(const_path_join)]` on by default
   = help: use `PathBuf::from("foo/bar")`

warning: path could be constructed from a string literal
  --> const_path_join.rs:9:5
   |
9  |     let _ = PathBuf::from("foo").join("bar").join("baz");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `PathBuf::from("foo/bar/baz")`

warning: path could be constructed from a string literal
  --> const_path_join.rs:10:5
   |
10 |     let _ = PathBuf::new().join("foo").join("bar");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `.join("foo/bar")`

warning: path could be constructed from a string literal
  --> const_path_join.rs:13:5
   |
13 |     let _ = PathBuf::from(env!("CARGO_MANIFEST_DIR")).join("target");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `PathBuf::from(concat!(env!("CARGO_MANIFEST_DIR"), "/target"))`

warning: path could be constructed from a string literal
  --> const_path_join.rs:14:5
   |
14 |     let _ = PathBuf::from(env!("CARGO_MANIFEST_DIR")).join("target").join("debug");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `PathBuf::from(concat!(env!("CARGO_MANIFEST_DIR"), "/target/debug"))`

warning: path could be constructed from a string literal
  --> const_path_join.rs:17:5
   |
17 |     let _ = PathBuf::from(env!("CARGO_MANIFEST_DIR")).join("src").join("lib.rs");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `PathBuf::from(concat!(env!("CARGO_MANIFEST_DIR"), "/src/lib.rs"))`

warning: path could be constructed from a string literal
  --> const_path_join.rs:18:5
   |
18 |     let _ = PathBuf::from("target").join(env!("CARGO_PKG_NAME")).join("debug");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `PathBuf::from(concat!("target", "/", env!("CARGO_PKG_NAME"), "/debug"))`

warning: path could be constructed from a string literal
  --> const_path_join.rs:22:5
   |
22 |     let _ = Utf8PathBuf::from("foo").join("bar");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `Utf8PathBuf::from("foo/bar")`

warning: path could be constructed from a string literal
  --> const_path_join.rs:23:5
   |
23 |     let _ = Utf8PathBuf::from(env!("CARGO_MANIFEST_DIR")).join("target");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `Utf8PathBuf::from(concat!(env!("CARGO_MANIFEST_DIR"), "/target"))` 