name: CI

on: [push, pull_request]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    # smoelius: Don't trigger on events related to pull requests opened by Dependabot. Those events
    # should trigger an action in dependabot.yml to update the lockfiles, and this action should
    # trigger on the corresponding push event.
    #   Note that `github.event.pull_request.user.login` is the user that opened the pull request,
    # which may be different from the user that triggered the action.
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.user.login != 'dependabot[bot]' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dylint-link
        run: cargo install --path ./dylint-link

      - name: Prettier
        run: npm install -g prettier && prettier --check '**/*.md' '**/*.yml'

      - name: Cargo sort
        run: |
          cargo install cargo-sort
          find . -name Cargo.toml | xargs -n 1 dirname | xargs -n 1 cargo sort --check --grouped

      - name: Format
        run: find . -name '*.rs' -exec rustfmt {} \; && git diff --exit-code

      - name: Format example READMEs
        run: ./scripts/update_example_READMEs.sh && git diff --exit-code

      - name: Check lockfiles
        run: ./scripts/update_lockfiles.sh && git diff --exit-code

      - name: Check licenses
        run: |
          cargo install cargo-license
          ./scripts/check_licenses.sh

      - name: Lint
        run: ./scripts/lint.sh

      - name: Udeps
        run: |
          rustup toolchain install nightly
          cargo install cargo-udeps
          cargo clean && cargo +nightly udeps --workspace --tests --no-default-features
          cargo clean && cargo +nightly udeps --workspace --tests

  test:
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.user.login != 'dependabot[bot]' }}

    strategy:
      matrix:
        environment: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.environment }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2

      # smoelius: The `nightly_toolchain` test makes sense only if the nightly driver is cached.
      - uses: actions/cache@v2
        with:
          path: |
            ~/.dylint_drivers/
            ~/.rustup/toolchains/
          key: ${{ runner.os }}-drivers-${{ hashFiles('driver/**') }}

      - name: Install dylint-link
        run: cargo install --path ./dylint-link

      - name: Test
        run: cargo test --workspace -- --nocapture

      - name: Test example documentation
        # smoelius: The `cdylib` -> `lib` trick is due to @MinerSebas.
        run: |
          for X in examples/*; do
            if [[ ! -d "$X" ]]; then
              continue
            fi
            pushd "$X"
            sed -i.bak 's/"cdylib"/"lib"/g' Cargo.toml
            cargo test --doc
            popd
          done

  coverage:
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.user.login != 'dependabot[bot]' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dylint-link
        run: cargo install --path ./dylint-link

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Install llvm-tools-preview
        run: rustup +nightly component add llvm-tools-preview

      - name: Coverage
        run: cargo llvm-cov --workspace --failure-mode all --lcov --output-path workspace.lcov
        env:
          RUSTUP_TOOLCHAIN: "nightly"

      - name: Install lcov
        run: sudo apt install lcov

      - name: Generate html
        run: genhtml --output-directory artifacts/html workspace.lcov

      - uses: actions/upload-artifact@v2
        with:
          name: Coverage
          path: artifacts
