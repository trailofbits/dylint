# smoelius: `dylint_driver` and `dylint_linting` are in their own workspaces because they require
# specific Rust components.

[workspace]
members = [
    "cargo-dylint",
    # "driver",
    "dylint",
    "dylint-link",
    "examples",
    "expensive",
    "internal",
    # "utils/linting",
    "utils/testing",
]
resolver = "2"

[workspace.dependencies]
ansi_term = "0.12"
anyhow = "1.0"
assert_cmd = "2.0"
bitflags = "2.6"
cargo = "0.81"
cargo-platform = "0.1"
cargo-util = "0.2"
cargo-util-schemas = "0.7"
cargo_metadata = "0.19"
clap = "4.5"
compiletest_rs = "0.11"
ctor = "0.2"
dirs = "5.0"
dunce = "1.0"
env_logger = "0.11"
fs_extra = "1.3"
git2 = "0.18"
glob = "0.3"
heck = "0.5"
hex = "0.4"
home = "0.5"
if_chain = "1.0"
is-terminal = "0.4"
log = "0.4"
once_cell = "1.20"
predicates = "3.1"
regex = "1.11"
rewriter = "0.1"
rust-embed = "8.5"
semver = "1.0"
serde = "1.0"
serde-untagged = "0.1"
serde_json = "1.0"
similar-asserts = "1.6"
tempfile = "3.14"
thiserror = "2.0"
toml = "0.8"
toml_edit = "0.22"
url = "2.5"
walkdir = "2.5"

[workspace.lints.rust.unexpected_cfgs]
level = "deny"
check-cfg = [
    "cfg(coverage)",
    "cfg(dylint_lib, values(any()))",
    "cfg(__cargo_cli)",
    "cfg(__cargo_lib)",
    "cfg(__library_packages)",
]

[workspace.metadata.dylint]
libraries = [
    { path = "examples/general" },
    { path = "examples/supplementary" },
    { path = "examples/testing/clippy" },
    { path = "examples/restriction/*" },
]

[workspace.metadata.unmaintained]
ignore = [
    "icu_locid",
    "icu_locid_transform",
    "icu_locid_transform_data",
    "miow",
    "num_cpus",
    "serde-value",
    "tester",
]
